#!/usr/bin/env bash

source "$(dirname "$0")/ft_util_inc_var"

if [ -z "$1" ]; then
    $S_LOG -s crit -d $S_NAME "\$1 is empty..."
    exit 1
else
    USER_NAME="$1"
fi

if [ -z "$2" ]; then
    GROUP_NAME="$USER_NAME"
else
    GROUP_NAME="$2"
fi

if [ "$(whoami)" != "root" ]; then
    $S_LOG -s crit -d $S_NAME "Please run as root! You are only \"$(whoami)\"."
    exit 2
fi

if [ ! $(getent passwd ${USER}) ]; then
    $S_LOG -s crit -d $S_NAME "Sorry \"$USER\" doesn't exist."
    exit 3
else
    user_home=$(eval echo "~${USER_NAME}")
fi

ssh_dir=${user_home}/.ssh
auth_keys_dir=${ssh_dir}/authorized_keys.d
auth_keys_file=${ssh_dir}/authorized_keys

if [ -d "$ssh_dir" ]; then
    [ ! -e "$auth_keys_file" ] && touch $auth_keys_file

    if [ ! -d "$auth_keys_dir" ]; then
        mkdir $auth_keys_dir
        $S_LOG -s warn -d $S_NAME "Folder ${auth_keys_dir} has been created. You can now add your public keys there. Exit."
        exit 1
    fi

    if [ ! "$(ls -A ${auth_keys_dir})" ]; then
        $S_LOG -s warn -d $S_NAME "No files in ${auth_keys_dir}. Add your public keys there. Exit."
        exit 2
    fi

    mv ${auth_keys_file} ${auth_keys_file}.bak

    echo "# DO NOT MODIFY THIS FILE. Compile it with script ft_util_sshauth !!!" >${auth_keys_file}
    cat ${auth_keys_dir}/* >>${auth_keys_file}

    chown -R ${USER_NAME}:${GROUP_NAME} ${user_home}/.ssh
    chmod -R 600 ${user_home}/.ssh/
    chmod 700 ${user_home}/.ssh

    $S_LOG -s $? -d $S_NAME "Creation of authorized_keys in ${user_home}/.ssh/ EXIT_CODE=$?"

else
    $S_LOG -s crit -d $S_NAME "Sorry \"${ssh_dir}\" doesn't exist. Please generate SSH Keys."
fi

exit 0
